name: Integration Tests

on:
  push:
    branches: [ features_youmni ]
  pull_request:
    branches: [ features_youmni ]

jobs:
  build:
    name: Build & Test Planning App
    runs-on: ubuntu-latest

    env:
      MYSQL_ROOT_PASSWORD: test_root_pw
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_pw
      MYSQL_HOST: mysql

      RABBITMQ_HOST: localhost
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-order

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: docker-compose -f docker-compose.ci.yml build

      - name: Start Docker containers
        run: docker-compose -f docker-compose.ci.yml up -d

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            nc -z localhost 3306 && echo "✅ MySQL ready" && break
            sleep 1
          done

      - name: Wait for RabbitMQ
        run: |
          for i in {1..30}; do
            nc -z localhost 5672 && echo "✅ RabbitMQ ready" && break
            sleep 1
          done

      - name: Wait for Flask API (session_producer)
        run: |
          for i in {1..30}; do
            nc -z localhost 30015 && echo "✅ Flask API ready" && break
            sleep 1
          done

      - name: Run tests
        run: pytest tests/integration --tb=short -v

      - name: Log containers on failure
        if: failure()
        run: docker-compose -f docker-compose.ci.yml logs

      - name: Shutdown containers
        run: docker-compose -f docker-compose.ci.yml down
