name: Integration Tests

on:
  push:
    branches: [ features_youmni ]
  pull_request:
    branches: [ features_youmni ]

jobs:
  integration:
    runs-on: ubuntu-latest

    env:
      MYSQL_ROOT_PASSWORD=test_root_pw
      MYSQL_DATABASE=test_db
      MYSQL_USER=test_user
      MYSQL_PASSWORD=test_user_pw
      MYSQL_HOST=mysql

      RABBITMQ_HOST=localhost
      RABBITMQ_PORT=5672
      RABBITMQ_USER=guest
      RABBITMQ_PASSWORD=guest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Start full docker-compose stack
        run: docker-compose -f docker-compose.yml up -d --build

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            nc -z localhost 3306 && echo "MySQL is ready" && break
            sleep 1
          done

      - name: Wait for RabbitMQ
        run: |
          for i in {1..30}; do
            nc -z localhost 30020 && echo "RabbitMQ is ready" && break
            sleep 1
          done

      - name: Wait for Flask API (session_producer)
        run: |
          for i in {1..30}; do
            nc -z localhost 30015 && echo "Flask API is ready" && break
            sleep 1
          done

      - name: Install Python requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-order

      - name: Run integration tests
        run: pytest tests/integration

      - name: Dump logs on failure
        if: failure()
        run: docker-compose logs

      - name: Stop containers
        run: docker-compose -f docker-compose.yml down
