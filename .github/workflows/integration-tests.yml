name: CI

on:
  push:
    branches:
      - features_youmni
  pull_request:
    branches:
      - features_youmni

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Installeer Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Maak .env bestand aan
        run: |
          echo "MYSQL_ROOT_PASSWORD=test_root_pw" >> .env
          echo "MYSQL_DATABASE=test_db" >> .env
          echo "MYSQL_USER=test_user" >> .env
          echo "MYSQL_PASSWORD=test_pw" >> .env
          echo "MYSQL_HOST=mysql" >> .env
          echo "RABBITMQ_HOST=rabbitmq" >> .env
          echo "RABBITMQ_PORT=5672" >> .env
          echo "RABBITMQ_USER=guest" >> .env
          echo "RABBITMQ_PASSWORD=guest" >> .env

      - name: Build en start containers
        run: docker compose -f docker-compose.ci.yml up -d --build

      - name: Wacht tot Session Producer beschikbaar is
        run: |
          echo "Wachten op Session Producer..."
          for i in {1..20}; do
            if curl -s http://localhost:30015 > /dev/null; then
              echo "âœ… Session Producer is klaar!"
              break
            fi
            sleep 3
          done

      - name: Draai tests
        run: |
          python3 -m pytest -v --tb=short

      - name: Toon container logs bij fout
        if: failure()
        run: docker compose -f docker-compose.ci.yml logs --tail=100

      - name: Stop containers
        run: docker compose -f docker-compose.ci.yml down
