version: "3.8"

services:
  event_producer:
    build:
      context: .
      dockerfile: event_producers/Dockerfile
    ports:
      - "30017:30017"
    env_file:
      - .env
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - planning_network

  event_consumer:
    build:
      context: .
      dockerfile: event_consumers/Dockerfile
    env_file:
      - .env
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    restart: unless-stopped
    depends_on:
      - mysql
    networks:
      - planning_network

  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - planning_network

  phpmyadmin:
    image: phpmyadmin
    environment:
      PMA_HOST: mysql
    ports:
      - "30018:80"
    restart: unless-stopped
    networks:
      - planning_network

  heartbeat:
    build:
      context: ./heartbeat
      dockerfile: Dockerfile
    container_name: planning_heartbeat
    depends_on:
      - event_producer
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    restart: unless-stopped
    networks:
      - planning_network

networks:
  planning_network:
    name: planning_network
    driver: bridge

volumes:
  mysql_data: